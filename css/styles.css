@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  /* outline: 1px solid red; */
}

body {
  line-height: 1.4;
  font-family: 'Roboto', sans-serif;
  background-color: #212326;
  color: #fff;
}

/* Container */

.container {
  margin: 0 auto;
  max-width: 90%;
}

/* Header */

.header {
  display: flex;
  align-items: center;
  height: 80px;
  border-bottom: 1px solid #fff;
  padding: 0 20px;
}

.header h1 {
  margin: 0  auto;
}

/* List */

.list-container {
  position: relative;
  margin: 20px auto 0;
}

.element {
  position: absolute;
  border: 1px solid #212326;
  background: #d41e1e;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  top: 0; 
  left: 0;
  transition: top 5000ms, left 5000ms, transform 5000ms;
  /* z-index: 1000000; */
}

.container-parent {
  position: absolute;
  display: flex;
  justify-content: center;
}

.container-parent .element {
  z-index: -1;
}

/* Buttons */

.buttons {
  position: fixed;
  bottom: 75px;
  display: flex;
  gap: 30px;
  width: 90%;
  padding: 0 30px;
}

.buttons .btn {
  flex: 1;
  padding: 15px;
  color: #fff; 
  font-weight: bold;
  border: none;
  border-radius: 5px;
  font-size: 1.15rem;
  transition: transform 500ms; 
}

.buttons .btn:hover {
  transform: scale(1.1);
}

.buttons .sort-btn {
  background: linear-gradient(to right, #64d419, #048700);
}

.buttons .unsort-btn {
  background: linear-gradient(to right, #b80000, #d41e1e);
}

/* function merge(array1, array2, array, parentArray) {


  let i = 0;
  let j = 0;
  let pos = 0;

  while(i < array1.length && j < array2.length) {
    if (array1[i] > array2[j]) {
      array[pos++] = array2[j++];
    } else { 
      array[pos++] = array1[i++];
    }
  } 

  while(i < array1.length) {
    array[pos++] = array1[i++]; 
  } 

  while(j < array2.length) {
    array[pos++] = array2[j++]; 
  }

  console.log("array1: ", array1);
  console.log("array2: ", array2);
  console.log("array: ", array);
  console.log("parentArrat", parentArray);
  console.log("........................");
} */